security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Users\Domain\Entity\User
                property: email
    firewalls:
        api:
            pattern: ^/api
            stateless: true
            entry_point: jwt
            json_login:
                username_path: email
                check_path: /api/auth/token/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            refresh_jwt:
                check_path: /api/auth/token/refresh

    access_control:
        # Для логина
        - { path: ^/api/auth/token/login, roles: PUBLIC_ACCESS }
        # Для обновления токена
        - { path: ^/api/auth/token/refresh, roles: PUBLIC_ACCESS }
        # Для получения информации о пользователе
        - { path: ^/api/users/me,       roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # Способ формирования токена для теста
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: plaintext
